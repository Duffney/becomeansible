---
- hosts: localhost
  gather_facts: false
  connection: local
  
  vars:
    ec2_ids: []

  tasks:

    - ec2_vpc_net_info:
        region: us-east-1
        filters:
          "tag:Name": ansible
      register: ansible_vpc

    - name: get ec2 instance info
      ec2_instance_info:
        region: us-east-1
        filters:
          "tag:app": ansible
          "tag:env": dev
      register: ec2

    - name: 

    - set_fact:
        ec2_ids: "{{ ec2_ids }} + [ '{{ item.instance_id }}' ]"
      loop: "{{ ec2['instances'] }}"
      loop_control:
        label: "{{ item.instance_id }}"

    - debug:
        var: ec2_ids

    # maybe don't need release_on_disassociation: yes
    - name: disassociate an elastic IP from an instance
      ec2_eip:
        device_id: i-1212f003
        ip: 93.184.216.119
        state: absent

    - name: Terminate ec2 instances
      ec2:
        state: 'absent'
        region: us-east-1
        instance_ids: "{{ ec2_ids }}"



    # - name: create subnet
    #   ec2_vpc_subnet:
    #     region: us-east-1
    #     vpc_id: "{{ ansible_vpc.vpc.id }}"
    #     cidr: 10.0.1.0/24
    #     map_public: yes
    #     tags:
    #       Name: ansible-subnet
    #       app: ansible
    #       env: dev
    #     state: absent
    #   register: ansible_subnet

    # - name: delete vpc
    #   ec2_vpc_net:
    #     name: ansible
    #     cidr_block: 10.0.0.0/16
    #     region: us-east-1
    #     tags:
    #       Name: ansible-vpc
    #       app: ansible
    #       env: dev
    #     state: absent
    #   register: ansible_vpc  

    # - name: get ec2 instance info
    #   ec2_instance_info:
    #     region: us-east-1
    #     filters:
    #       "tag:app": ansible
    #       "tag:env": dev
    #   register: ec2

    # - debug:
    #     msg: "{{ item['instance_id'] }}"
    #   loop: "{{ ec2['instances'] }}"
    #   loop_control:
    #     label: "{{ item.instance_id }}"